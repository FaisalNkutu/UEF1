{"version":3,"file":"static/js/main.349af8a2.js","mappings":"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","sources":["screens/SurveyScreen.js","screens/CreateSurveyQuestionScreen.js","screens/ViewResponsesScreen.js","screens/SurveyDashboardScreen.js","screens/DashboardScreen.js","screens/LoginScreen.js","screens/RegisterScreen.js","screens/UsageChartScreen.js","utils/screenLogUtils.js","screens/ScreenUsageDashboard.js","utils/ScreenTimeTracker.js","screens/LiveLogScreen.js","App.js","webpack/bootstrap","webpack/runtime/chunk loaded","webpack/runtime/compat get default export","webpack/runtime/define property getters","webpack/runtime/global","webpack/runtime/hasOwnProperty shorthand","webpack/runtime/make namespace object","webpack/runtime/node module decorator","webpack/runtime/jsonp chunk loading","webpack/startup"],"sourcesContent":["import React, { useEffect, useState } from 'react';\nimport {\n  View, Text, TextInput, ScrollView, Button,\n  StyleSheet, Platform, Alert\n} from 'react-native';\nimport Slider from '@react-native-community/slider';\nimport { Picker } from '@react-native-picker/picker';\n// import AsyncStorage from '@react-native-async-storage/async-storage'; // Uncomment if you're using token/session storage\n\nexport default function SurveyScreen({ route, navigation, onLogout }) {\n  const user = route?.params?.user ?? null;\n  const userId = user?.id ?? null;\n  const role = user?.role?.toLowerCase() ?? 'unknown';\n\n  const [questions, setQuestions] = useState([]);\n  const [responses, setResponses] = useState({});\n  const [error, setError] = useState('');\n  const [currentIndex, setCurrentIndex] = useState(0);\n\n  useEffect(() => {\n    if (!userId) {\n      if (Platform.OS === 'web') {\n        window.alert(\"⚠️ Warning: userId is missing!\");\n      } else {\n        Alert.alert(\"⚠️ Warning\", \"userId is missing!\");\n      }\n    }\n  }, []);\n\n  useEffect(() => {\n    fetch('http://192.168.91.1:8085/api/feedback/questions')\n      .then(res => res.json())\n      .then(data => {\n        if (Array.isArray(data.content)) {\n          setQuestions(data.content);\n        } else {\n          setError('Invalid format from server');\n        }\n      })\n      .catch(() => {\n        setError('Failed to load questions');\n      });\n  }, []);\n\n  const handleChange = (questionId, value) => {\n    setResponses(prev => ({ ...prev, [questionId]: value }));\n  };\n\n  const showAlert = (title, message) => {\n    if (Platform.OS === 'web') {\n      window.alert(`${title}\\n\\n${message}`);\n    } else {\n      Alert.alert(title, message);\n    }\n  };\n\n  const handleSubmit = async () => {\n    if (!userId) {\n      showAlert(\"Error\", \"Cannot submit, userId is missing.\");\n      return;\n    }\n\n    const payload = questions.map(q => ({\n      questionId: q.id,\n      answer: responses[q.id]?.toString().trim() || \"\"\n    })).filter(item => item.answer !== \"\");\n\n    if (payload.length < questions.length) {\n      showAlert(\"Please answer all questions.\", \"\");\n      return;\n    }\n\n    try {\n      const res = await fetch(`http://192.168.91.1:8085/api/feedback/submit?userId=${userId}`, {\n        method: \"POST\",\n        headers: {\n          \"Content-Type\": \"application/json\"\n        },\n        body: JSON.stringify(payload)\n      });\n\n      const msg = await res.text();\n\n      if (res.ok) {\n        showAlert(\"✅ Submitted successfully!\", msg);\n      } else {\n        showAlert(`❌ Server error (${res.status})`, msg);\n      }\n    } catch (err) {\n      showAlert(\"❌ Network error\", err.message);\n    }\n  };\n\n  const handleViewResponses = () => {\n    if (!userId) {\n      showAlert(\"Error\", \"Cannot navigate, userId is missing.\");\n      return;\n    }\n    navigation.navigate('SurveyDashboard', { user });\n  };\n\n  const currentQuestion = questions[currentIndex];\n\n  return (\n    <View style={{ flex: 1 }}>\n      <ScrollView contentContainerStyle={styles.container}>\n        <Text style={styles.title}>Survey Question {currentIndex + 1} of {questions.length}</Text>\n\n        <Text style={styles.subText}>👤 Role: {role} | 🆔 ID: {userId ?? 'N/A'}</Text>\n\n        {error !== '' && <Text style={styles.error}>{error}</Text>}\n\n        {currentQuestion && (\n          <View key={currentQuestion.id} style={styles.questionBlock}>\n            <Text style={styles.label}>{currentQuestion.questiontext}</Text>\n\n            {currentQuestion.questiontype === 'text' && (\n              <TextInput\n                style={styles.input}\n                value={responses[currentQuestion.id] || ''}\n                placeholder=\"Type your answer\"\n                onChangeText={val => handleChange(currentQuestion.id, val)}\n              />\n            )}\n\n            {currentQuestion.questiontype === 'multichoice' && (\n              <View style={styles.input}>\n                <Picker\n                  selectedValue={responses[currentQuestion.id] || ''}\n                  onValueChange={val => handleChange(currentQuestion.id, val)}\n                >\n                  <Picker.Item label=\"Select an option\" value=\"\" />\n                  {currentQuestion.presentation.split('|').map(opt => (\n                    <Picker.Item key={opt} label={opt} value={opt} />\n                  ))}\n                </Picker>\n              </View>\n            )}\n\n            {currentQuestion.questiontype === 'numeric' && (() => {\n              const options = currentQuestion.presentation.split('|').map(Number).sort((a, b) => a - b);\n              const min = options[0];\n              const max = options[options.length - 1];\n              const step = options.length > 1 ? options[1] - options[0] : 1;\n              const currentValue = responses[currentQuestion.id] ? Number(responses[currentQuestion.id]) : min;\n\n              return (\n                <View style={styles.sliderBlock}>\n                  <Text style={styles.sliderValue}>Selected: {currentValue}</Text>\n                  <Slider\n                    minimumValue={min}\n                    maximumValue={max}\n                    step={step}\n                    value={currentValue}\n                    onValueChange={(val) => handleChange(currentQuestion.id, val.toString())}\n                    minimumTrackTintColor=\"#006bae\"\n                    maximumTrackTintColor=\"#ccc\"\n                    thumbTintColor=\"#006bae\"\n                  />\n                  <View style={styles.sliderLabels}>\n                    <Text>{min}</Text>\n                    <Text>{max}</Text>\n                  </View>\n                </View>\n              );\n            })()}\n          </View>\n        )}\n\n        <View style={styles.paginationRow}>\n          <View style={styles.halfButton}>\n            <Button\n              title=\"Previous\"\n              onPress={() => setCurrentIndex(i => Math.max(i - 1, 0))}\n              disabled={currentIndex === 0}\n            />\n          </View>\n          <View style={styles.halfButton}>\n            <Button\n              title={currentIndex === questions.length - 1 ? \"Submit\" : \"Next\"}\n              onPress={() => {\n                const currentAnswer = responses[currentQuestion?.id];\n                if (!currentAnswer || currentAnswer.toString().trim() === '') {\n                  showAlert(\"Please answer this question before continuing.\", \"\");\n                  return;\n                }\n\n                if (currentIndex === questions.length - 1) {\n                  handleSubmit();\n                } else {\n                  setCurrentIndex(i => i + 1);\n                }\n              }}\n              disabled={questions.length === 0}\n            />\n          </View>\n        </View>\n\n        <View style={styles.buttonRow}>\n          <Button title=\"View My Responses\" onPress={handleViewResponses} color=\"#444\" />\n        </View>\n      </ScrollView>\n\n<View style={styles.logoutWrapper}>\n  <Button\n    title=\"Logout\"\n    color=\"#006bae\"\n    onPress={() => {\n      if (onLogout) onLogout(); // ✅ Reset user state in App.js\n      navigation.dispatch(\n        CommonActions.reset({\n          index: 0,\n          routes: [{ name: 'Login' }],\n        })\n      );\n    }}\n  />\n</View>\n\n\n\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { padding: 20, paddingBottom: 100, backgroundColor: '#f5f5f5' },\n  title: { fontSize: 22, color: '#006bae', textAlign: 'center', marginBottom: 10 },\n  subText: { fontSize: 14, textAlign: 'center', color: '#666', marginBottom: 15 },\n  questionBlock: { marginBottom: 20 },\n  label: { fontWeight: 'bold', marginBottom: 5 },\n  input: {\n    borderWidth: 1, borderColor: '#ccc', borderRadius: 4,\n    paddingHorizontal: 10, paddingVertical: 8, backgroundColor: '#fff'\n  },\n  error: { color: 'red', marginBottom: 15, textAlign: 'center' },\n  sliderBlock: { marginTop: 10, paddingVertical: 10 },\n  sliderValue: { marginBottom: 5, fontWeight: '600', color: '#333' },\n  sliderLabels: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 5\n  },\n  buttonRow: {\n    marginTop: 30\n  },\n  paginationRow: {\n    flexDirection: 'row',\n    justifyContent: 'space-between',\n    marginTop: 20\n  },\n  halfButton: {\n    flex: 1,\n    marginHorizontal: 5\n  },\n  logoutWrapper: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: '#fff',\n    padding: 10,\n    borderTopWidth: 1,\n    borderColor: '#ddd'\n  }\n});","import React, { useState } from 'react';\nimport {\n  View, Text, TextInput, Button, Alert,\n  StyleSheet, ScrollView, TouchableOpacity\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\nimport { CommonActions } from '@react-navigation/native'; // ✅ Needed for logout\n\nexport default function CreateSurveyQuestionScreen({ navigation, onLogout }) {\n  const [questiontext, setQuestionText] = useState('');\n  const [questiontype, setQuestionType] = useState('text');\n  const [presentation, setPresentation] = useState('');\n\n  const handleSubmit = async () => {\n    if (!questiontext.trim()) {\n      Alert.alert('Validation Error', 'Question Text is required');\n      return;\n    }\n\n    try {\n      const res = await fetch('http://192.168.91.1:8085/saveQuestion', {\n        method: 'POST',\n        headers: { 'Content-Type': 'application/x-www-form-urlencoded' },\n        body: `questiontext=${encodeURIComponent(questiontext)}&questiontype=${encodeURIComponent(questiontype)}&presentation=${encodeURIComponent(presentation)}`\n      });\n\n      if (res.ok) {\n        Alert.alert('✅ Success', 'Question saved!');\n        setQuestionText('');\n        setPresentation('');\n        setQuestionType('text');\n      } else {\n        Alert.alert('Error', 'Failed to save question');\n      }\n    } catch (err) {\n      console.error(err);\n      Alert.alert('Error', 'Network error');\n    }\n  };\n\n  return (\n    <View style={{ flex: 1 }}>\n      <ScrollView contentContainerStyle={styles.container}>\n        <Text style={styles.title}>Create New Survey Question</Text>\n\n        <Text style={styles.label}>Question Text:</Text>\n        <TextInput\n          style={styles.input}\n          value={questiontext}\n          onChangeText={setQuestionText}\n          placeholder=\"Enter question here\"\n        />\n\n        <Text style={styles.label}>Question Type:</Text>\n        <View style={styles.input}>\n          <Picker\n            selectedValue={questiontype}\n            onValueChange={(val) => setQuestionType(val)}\n          >\n            <Picker.Item label=\"Text\" value=\"text\" />\n            <Picker.Item label=\"Multichoice\" value=\"multichoice\" />\n            <Picker.Item label=\"Numeric (Rating)\" value=\"numeric\" />\n          </Picker>\n        </View>\n\n        <Text style={styles.label}>Presentation (use `|` to separate multichoice options):</Text>\n        <TextInput\n          style={styles.input}\n          value={presentation}\n          onChangeText={setPresentation}\n          placeholder=\"Option1|Option2|Option3\"\n        />\n\n        <View style={{ flexDirection: 'row', justifyContent: 'space-between' }}>\n          <View style={styles.buttonWrapper}>\n            <Button title=\"Save Question\" onPress={handleSubmit} color=\"#006bae\" />\n          </View>\n\n          <TouchableOpacity style={styles.buttonWrapper}>\n            <Button\n              title=\"View Survey Responses\"\n              onPress={() => navigation.navigate('SurveyDashboard')}\n              color=\"#006bae\"\n            />\n          </TouchableOpacity>\n        </View>\n      </ScrollView>\n\n      <View style={styles.logoutWrapper}>\n        <TouchableOpacity style={styles.buttonWrapper}>\n          <Button\n            title=\"Logout\"\n            color=\"#006bae\"\n            onPress={() => {\n              if (onLogout) onLogout();\n              navigation.dispatch(\n                CommonActions.reset({\n                  index: 0,\n                  routes: [{ name: 'Login' }],\n                })\n              );\n            }}\n          />\n        </TouchableOpacity>\n      </View>\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: '#f5f5f5',\n    flexGrow: 1,\n    paddingBottom: 100,\n  },\n  title: {\n    fontSize: 22,\n    color: '#006bae',\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: 'bold',\n  },\n  label: {\n    fontWeight: 'bold',\n    marginTop: 10,\n    marginBottom: 5,\n  },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 4,\n    padding: 8,\n    backgroundColor: '#fff',\n  },\n  buttonWrapper: {\n    marginTop: 20,\n    alignItems: 'center',\n  },\n  logoutWrapper: {\n    position: 'absolute',\n    bottom: 0,\n    left: 0,\n    right: 0,\n    backgroundColor: '#fff',\n    padding: 10,\n    borderTopWidth: 1,\n    borderColor: '#ddd',\n  },\n});\n","// ViewResponsesScreen.js\nimport React, { useEffect, useState } from 'react';\nimport {\n  View, Text, Button, ScrollView, Alert,\n  StyleSheet, ActivityIndicator, TextInput, FlatList, TouchableOpacity\n} from 'react-native';\n\nexport default function ViewResponsesScreen({ route, navigation }) {\n  const { user } = route.params;\n\n  const [students, setStudents] = useState([]);\n  const [selectedUserId, setSelectedUserId] = useState(user.role === 'STUDENT' ? user.id : null);\n  const [query, setQuery] = useState('');\n  const [filteredStudents, setFilteredStudents] = useState([]);\n  const [responses, setResponses] = useState([]);\n  const [loading, setLoading] = useState(false);\n\n  const fetchStudents = async () => {\n    try {\n      const res = await fetch('http://192.168.91.1:8085/api/feedback/users');\n      const data = await res.json();\n      setStudents(data);\n      setFilteredStudents(data);\n    } catch (err) {\n      Alert.alert('Error', 'Could not fetch user list');\n    }\n  };\n\n  const fetchResponses = async (userId) => {\n    try {\n      setLoading(true);\n      const res = await fetch(`http://192.168.91.1:8085/api/feedback/responses/${userId}`);\n      const data = await res.json();\n      setResponses(data);\n    } catch (err) {\n      Alert.alert('Error', 'Failed to fetch responses');\n    } finally {\n      setLoading(false);\n    }\n  };\n\n  useEffect(() => {\n    if (user.role === 'TEACHER') fetchStudents();\n    if (user.role === 'STUDENT') fetchResponses(user.id);\n  }, []);\n\n  const handleSearch = (text) => {\n    setQuery(text);\n    setFilteredStudents(\n      students.filter((s) =>\n        s.username.toLowerCase().includes(text.toLowerCase())\n      )\n    );\n  };\n\n  const handleSelectStudent = (studentId) => {\n    setSelectedUserId(studentId);\n    fetchResponses(studentId);\n    setQuery('');\n    setFilteredStudents([]);\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text style={styles.title}>Submitted Survey Responses</Text>\n\n      <TouchableOpacity onPress={() => navigation.navigate('ViewResponses', { user })}>\n        <Text style={styles.menuItem}>📊 View Responses</Text>\n      </TouchableOpacity>\n\n      {user.role === 'TEACHER' && (\n        <View style={styles.dropdown}>\n          <TextInput\n            style={styles.input}\n            placeholder=\"Search student by username\"\n            value={query}\n            onChangeText={handleSearch}\n          />\n          {query.length > 0 && (\n            <FlatList\n              data={filteredStudents}\n              keyExtractor={(item) => item.id.toString()}\n              renderItem={({ item }) => (\n                <TouchableOpacity onPress={() => handleSelectStudent(item.id)}>\n                  <Text style={styles.option}>{item.username}</Text>\n                </TouchableOpacity>\n              )}\n              style={styles.dropdownList}\n            />\n          )}\n        </View>\n      )}\n\n      {loading ? (\n        <ActivityIndicator size=\"large\" color=\"#006bae\" />\n      ) : (\n        <>\n          {responses.length === 0 ? (\n            <Text style={styles.info}>No responses available.</Text>\n          ) : (\n            responses.map((r, index) => (\n              <View key={index} style={styles.responseItem}>\n                <Text style={styles.qid}>Q{r.questionId}</Text>\n                <Text style={styles.answer}>{r.answer || '(no answer)'}</Text>\n                {r.timestamp && (\n                  <Text style={styles.timestamp}>\n                    {new Date(r.timestamp).toLocaleString()}\n                  </Text>\n                )}\n              </View>\n            ))\n          )}\n        </>\n      )}\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { padding: 20, backgroundColor: '#f5f5f5' },\n  title: { fontSize: 22, color: '#006bae', textAlign: 'center', marginBottom: 20 },\n  dropdown: { marginBottom: 20 },\n  input: {\n    borderColor: '#ccc', borderWidth: 1, borderRadius: 5,\n    padding: 10, backgroundColor: '#fff'\n  },\n  dropdownList: {\n    maxHeight: 200,\n    borderColor: '#ccc',\n    borderWidth: 1,\n    borderTopWidth: 0,\n    backgroundColor: '#fff'\n  },\n  option: {\n    padding: 10,\n    borderBottomColor: '#eee',\n    borderBottomWidth: 1\n  },\n  info: {\n    textAlign: 'center',\n    color: '#888',\n    fontStyle: 'italic',\n    marginTop: 10\n  },\n  responseItem: {\n    backgroundColor: '#fff',\n    padding: 15,\n    marginBottom: 10,\n    borderRadius: 8,\n    borderLeftColor: '#006bae',\n    borderLeftWidth: 5\n  },\n  qid: { fontWeight: 'bold', marginBottom: 5 },\n  answer: { fontSize: 16 },\n  timestamp: {\n    fontSize: 12,\n    color: '#777',\n    marginTop: 8,\n    fontStyle: 'italic'\n  },\n  menuItem: {\n    color: '#006bae',\n    fontWeight: 'bold',\n    textAlign: 'center',\n    marginBottom: 15,\n    fontSize: 16\n  }\n});","import React, { useEffect, useState } from 'react';\r\nimport { Platform, Alert } from 'react-native';\r\nimport {\r\n  View, Text, TextInput, ScrollView,\r\n  FlatList, TouchableOpacity, StyleSheet, Button\r\n} from 'react-native';\r\nimport { useNavigation, CommonActions } from '@react-navigation/native';\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport default function SurveyDashboardScreen({ route, onLogout }) {\r\n  const navigation = useNavigation();\r\n  const user = route.params?.user || {};\r\n  const role = user.role?.toLowerCase() || '';\r\n  const loggedInUserId = user.id;\r\n\r\n  const [users, setUsers] = useState([]);\r\n  const [query, setQuery] = useState('');\r\n  const [filteredUsers, setFilteredUsers] = useState([]);\r\n  const [selectedUserId, setSelectedUserId] = useState(role === 'student' ? loggedInUserId : null);\r\n  const [responses, setResponses] = useState([]);\r\n  const [sortConfig, setSortConfig] = useState({ key: null, direction: 'asc' });\r\n\r\n  useEffect(() => {\r\n    if (role !== 'student') {\r\n      fetch('http://192.168.91.1:8085/api/feedback/users')\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (!Array.isArray(data)) {\r\n            Alert.alert(\"Error\", \"Invalid user data format from backend\");\r\n            return;\r\n          }\r\n          setUsers(data);\r\n          setFilteredUsers(data);\r\n        })\r\n        .catch(() => Alert.alert('Error', 'Unable to fetch users'));\r\n    } else {\r\n      fetch(`http://192.168.91.1:8085/api/feedback/users/${loggedInUserId}`)\r\n        .then(res => {\r\n          if (!res.ok) throw new Error(\"User not found\");\r\n          return res.json();\r\n        })\r\n        .then(data => {\r\n          setUsers([data]);\r\n          setFilteredUsers([data]);\r\n          setSelectedUserId(data.id);\r\n          fetchResponses(data.id);\r\n        })\r\n        .catch(() => Alert.alert('Error', 'Unable to fetch user details'));\r\n    }\r\n  }, []);\r\n\r\n  const handleSearch = (text) => {\r\n    setQuery(text);\r\n    const filtered = users.filter(u =>\r\n      u.username?.toLowerCase().includes(text.toLowerCase())\r\n    );\r\n    setFilteredUsers(filtered);\r\n    const match = filtered.find(u =>\r\n      u.username?.toLowerCase() === text.toLowerCase()\r\n    );\r\n    setSelectedUserId(match ? match.id : null);\r\n  };\r\n\r\n  const fetchResponses = async (overrideUserId) => {\r\n    const userId = overrideUserId ?? selectedUserId ?? 1;\r\n    try {\r\n      const res = await fetch(`http://192.168.91.1:8085/api/feedback/responses/${userId}`);\r\n      const data = await res.json();\r\n      if (!Array.isArray(data)) {\r\n        Alert.alert('Error', 'Invalid response format from backend');\r\n        return;\r\n      }\r\n      setResponses(data);\r\n    } catch {\r\n      Alert.alert('Error', 'Failed to load responses');\r\n    }\r\n  };\r\n\r\n  const handleSort = (key) => {\r\n    let direction = 'asc';\r\n    if (sortConfig.key === key && sortConfig.direction === 'asc') direction = 'desc';\r\n    const sorted = [...responses].sort((a, b) => {\r\n      const aVal = (a[key] || '').toString().toLowerCase();\r\n      const bVal = (b[key] || '').toString().toLowerCase();\r\n      return direction === 'asc' ? aVal.localeCompare(bVal) : bVal.localeCompare(aVal);\r\n    });\r\n    setResponses(sorted);\r\n    setSortConfig({ key, direction });\r\n  };\r\n\r\n  const handleLogout = async () => {\r\n    try {\r\n      await AsyncStorage.removeItem('authToken');\r\n      navigation.dispatch(\r\n        CommonActions.reset({\r\n          index: 0,\r\n          routes: [{ name: 'Login' }],\r\n        })\r\n      );\r\n      if (typeof onLogout === 'function') {\r\n        onLogout();\r\n      }\r\n    } catch (error) {\r\n      Alert.alert(\"Logout Failed\", \"An error occurred while logging out.\");\r\n      console.error(\"Logout error:\", error);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <View style={{ flex: 1 }}>\r\n      <ScrollView contentContainerStyle={styles.container}>\r\n        <Text style={styles.title}>Dashboard</Text>\r\n\r\n        {role !== 'student' && (\r\n          <View style={styles.searchBox}>\r\n            <TextInput\r\n              style={styles.input}\r\n              placeholder=\"Search Student Username\"\r\n              value={query}\r\n              onChangeText={handleSearch}\r\n            />\r\n\r\n            {filteredUsers.length > 0 && (\r\n              <FlatList\r\n                data={filteredUsers}\r\n                keyExtractor={(item) => item.id?.toString() ?? Math.random().toString()}\r\n                renderItem={({ item }) => (\r\n                  <TouchableOpacity onPress={() => {\r\n                    setQuery(item.username);\r\n                    setSelectedUserId(item.id);\r\n                  }}>\r\n                    <Text style={styles.option}>{item.username}</Text>\r\n                  </TouchableOpacity>\r\n                )}\r\n                style={styles.dropdownList}\r\n              />\r\n            )}\r\n\r\n            <Button title=\"View Responses\" onPress={() => fetchResponses()} color=\"#006bae\" />\r\n\r\n            <View style={{ marginTop: 10 }} />\r\n            <Button\r\n              title=\"📊 View Usage Chart (All Users)\"\r\n              color=\"#28a745\"\r\n              onPress={() => navigation.navigate('UsageChart')}\r\n            />\r\n            <View style={{ marginTop: 10 }} />\r\n            <Button\r\n              title=\"📊 View Usage Chart (Selected User)\"\r\n              color=\"#1e90ff\"\r\n              onPress={() => {\r\n                if (selectedUserId) {\r\n                  navigation.navigate('ScreenUsageDashboard', { userId: selectedUserId });\r\n                } else {\r\n                  Alert.alert(\"Select User\", \"Please select a user before viewing usage.\");\r\n                }\r\n              }}\r\n            />\r\n          </View>\r\n        )}\r\n\r\n        <Text style={styles.subheading}>Responses</Text>\r\n\r\n        <View style={styles.tableHeader}>\r\n          <TouchableOpacity style={styles.cellHeader} onPress={() => handleSort('questionId')}>\r\n            <Text style={styles.sortableHeader}>\r\n              QID {sortConfig.key === 'questionId' ? (sortConfig.direction === 'asc' ? '↑' : '↓') : ''}\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.cellHeader} onPress={() => handleSort('answer')}>\r\n            <Text style={styles.sortableHeader}>\r\n              Answer {sortConfig.key === 'answer' ? (sortConfig.direction === 'asc' ? '↑' : '↓') : ''}\r\n            </Text>\r\n          </TouchableOpacity>\r\n          <TouchableOpacity style={styles.cellHeader} onPress={() => handleSort('timestamp')}>\r\n            <Text style={styles.sortableHeader}>\r\n              Timestamp {sortConfig.key === 'timestamp' ? (sortConfig.direction === 'asc' ? '↑' : '↓') : ''}\r\n            </Text>\r\n          </TouchableOpacity>\r\n        </View>\r\n\r\n        {responses.length === 0 ? (\r\n          <Text style={styles.noResponse}>No responses available.</Text>\r\n        ) : (\r\n          responses.map((resp, index) => (\r\n            <View key={index} style={styles.tableRow}>\r\n              <Text style={styles.cell}>{resp.questionId ?? '–'}</Text>\r\n              <Text style={styles.cell}>{resp.answer?.trim() || '(no answer)'}</Text>\r\n              <Text style={styles.cell}>{resp.timestamp || '(no time)'}</Text>\r\n            </View>\r\n          ))\r\n        )}\r\n      </ScrollView>\r\n\r\n      <View style={styles.logoutWrapper}>\r\n        <Button title=\"🚪 Logout\" color=\"#006bae\" onPress={handleLogout} />\r\n      </View>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { padding: 20, paddingBottom: 100, backgroundColor: '#f5f5f5' },\r\n  title: { fontSize: 22, color: '#2c3e50', textAlign: 'center', marginBottom: 20 },\r\n  subheading: { fontSize: 18, color: '#2c3e50', marginTop: 20, marginBottom: 10 },\r\n  searchBox: { marginBottom: 20 },\r\n  input: {\r\n    borderWidth: 1, borderColor: '#ccc', borderRadius: 4,\r\n    padding: 10, backgroundColor: '#fff', fontSize: 16\r\n  },\r\n  dropdownList: {\r\n    maxHeight: 150, borderColor: '#ccc', borderWidth: 1,\r\n    backgroundColor: '#fff', marginTop: 5\r\n  },\r\n  option: { padding: 10, borderBottomColor: '#eee', borderBottomWidth: 1 },\r\n  tableHeader: {\r\n    flexDirection: 'row', backgroundColor: '#d6ecff', paddingVertical: 10,\r\n    borderTopLeftRadius: 4, borderTopRightRadius: 4\r\n  },\r\n  tableRow: {\r\n    flexDirection: 'row', borderBottomWidth: 1, borderBottomColor: '#ddd',\r\n    paddingVertical: 8\r\n  },\r\n  cellHeader: { flex: 1, textAlign: 'center' },\r\n  sortableHeader: {\r\n    fontWeight: 'bold', textAlign: 'center',\r\n    textDecorationLine: 'underline', color: '#006bae'\r\n  },\r\n  cell: { flex: 1, textAlign: 'center' },\r\n  noResponse: { textAlign: 'center', fontStyle: 'italic', color: '#888', marginTop: 10 },\r\n  logoutWrapper: {\r\n    position: 'absolute',\r\n    bottom: 0,\r\n    left: 0,\r\n    right: 0,\r\n    backgroundColor: '#fff',\r\n    padding: 10,\r\n    borderTopWidth: 1,\r\n    borderColor: '#ddd'\r\n  }\r\n});\r\n","// screens/DashboardScreen.js\nimport React from 'react';\nimport { View, Text, StyleSheet, TouchableOpacity, ScrollView, Button } from 'react-native';\n\nexport default function DashboardScreen({ navigation, route }) {\n  const { user } = route.params;\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <Text style={styles.title}>Welcome, {user.username}!</Text>\n\n      <View style={styles.menu}>\n        {/* Show only if the user is a student */}\n        {user.role === 'student' && (\n          <>\n            <TouchableOpacity onPress={() => navigation.navigate('Survey', { user })}>\n              <Text style={styles.menuItem}>📝 Take Surveymmmmm</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => navigation.navigate('ViewResponses', { user })}>\n              <Text style={styles.menuItem}>📊 View Responsesmmmm</Text>\n            </TouchableOpacity>\n          </>\n        )}\n\n        {/* Show only if the user is NOT a student */}\n        {user.role !== 'student' && (\n          <>\n            <TouchableOpacity onPress={() => navigation.navigate('CreateSurvey', { user })}>\n              <Text style={styles.menuItem}>➕ Create Survey</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => navigation.navigate('SurveyDashboard', { user })}>\n              <Text style={styles.menuItem}>📋 Survey Dashboard</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => navigation.navigate('UsageChart', { user })}>\n              <Text style={styles.menuItem}>📈 Usage Chart</Text>\n            </TouchableOpacity>\n\n            <TouchableOpacity onPress={() => navigation.navigate('ScreenUsageDashboard', { user })}>\n              <Text style={styles.menuItem}>🖥️ Screen Usage Dashboard</Text>\n            </TouchableOpacity>\n          </>\n        )}\n\n        {/* ✅ Live Log Button - visible to all roles */}\n        <View style={styles.buttonWrapper}>\n          <Button\n            title=\"🖥️ View Live Log\"\n            onPress={() => navigation.navigate('LiveLog', { user })}\n            color=\"#006bae\"\n          />\n        </View>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    padding: 20,\n    backgroundColor: '#f5f5f5',\n    flexGrow: 1,\n    justifyContent: 'center'\n  },\n  title: {\n    fontSize: 24,\n    fontWeight: 'bold',\n    textAlign: 'center',\n    color: '#006bae',\n    marginBottom: 30\n  },\n  menu: {\n    gap: 15\n  },\n  menuItem: {\n    padding: 12,\n    fontSize: 18,\n    color: '#006bae',\n    textAlign: 'center',\n    backgroundColor: '#e0f0ff',\n    borderRadius: 6\n  },\n  buttonWrapper: {\n    marginTop: 20,\n    alignSelf: 'center',\n    width: '80%'\n  }\n});\n","import React, { useState } from 'react';\nimport AsyncStorage from '@react-native-async-storage/async-storage';\nimport { Platform, View, Text, TextInput, Button, Alert, StyleSheet, Image, TouchableOpacity, ScrollView } from 'react-native';\n\nexport default function LoginScreen({ navigation, onLogin }) {\n  const [username, setUsername] = useState('');\n  const [password, setPassword] = useState('');\n  const [error, setError] = useState('');\n\n  const showAlert = (title, message) => {\n    if (Platform.OS === 'web') {\n      window.alert(`${title}\\n\\n${message}`);\n    } else {\n      Alert.alert(title, message);\n    }\n  };\n\n  const handleLogin = async () => {\n    if (!username || !password) {\n      setError('Both fields are required');\n      return;\n    }\n\n    try {\n      const res = await fetch('http://192.168.91.1:8085/api/login', {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/x-www-form-urlencoded',\n        },\n        body: `username=${encodeURIComponent(username)}&password=${encodeURIComponent(password)}`\n      });\n\n      const data = await res.json();\n      const role = data.role || '';\n\n      if (res.ok && data.token) {\n        await AsyncStorage.setItem('authToken', data.token);\n\n        // ✅ Show role alert for both web & mobile\n        //showAlert('Login Info', `Role => ${role || 'No role passed'}`);\n\n  // ✅ Navigate to the correct screen with user explicitly passed\n  if (data.role.toLowerCase() === 'student') {\n    navigation.navigate('Survey', { user: data });\n  } else {\n    navigation.navigate('CreateSurvey', { user: data });\n  }\n\n        // ✅ Proceed to app\n        onLogin(data);\n      } else {\n        showAlert('Login failed', data.error || 'Invalid credentials');\n      }\n    } catch (err) {\n      console.error(err);\n      setError('Network error');\n    }\n  };\n\n  return (\n    <ScrollView contentContainerStyle={styles.container}>\n      <View style={styles.header}>\n        <Image\n          source={{ uri: 'https://www.uefwebshop.fi/cdn/shop/files/UEF_eng_black.jpg?v=1693486399&width=330' }}\n          style={styles.logo}\n        />\n        <Text style={styles.title}>University of Eastern Finland - LMS</Text>\n      </View>\n\n      <View style={styles.loginBox}>\n        <Text style={styles.loginTitle}>Login</Text>\n\n        <Text style={styles.label}>Username:</Text>\n        <TextInput\n          style={styles.input}\n          value={username}\n          onChangeText={setUsername}\n          autoCapitalize=\"none\"\n        />\n\n        <Text style={styles.label}>Password:</Text>\n        <TextInput\n          style={styles.input}\n          value={password}\n          onChangeText={setPassword}\n          secureTextEntry\n        />\n\n        {error !== '' && <Text style={styles.error}>{error}</Text>}\n\n        <View style={styles.buttonWrapper}>\n          <Button title=\"Login\" onPress={handleLogin} color=\"#006bae\" />\n        </View>\n\n        <TouchableOpacity onPress={() => navigation.navigate('Register')}>\n          <Text style={styles.registerLink}>Don't have an account? Register</Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { backgroundColor: '#f5f5f5', flexGrow: 1, paddingBottom: 20 },\n  header: {\n    backgroundColor: '#006bae',\n    padding: 20,\n    alignItems: 'center',\n  },\n  logo: { height: 60, width: 120, marginBottom: 10 },\n  title: { color: '#fff', fontSize: 18, fontWeight: 'bold' },\n  loginBox: {\n    backgroundColor: '#fff',\n    margin: 30,\n    padding: 20,\n    borderRadius: 10,\n    elevation: 3,\n  },\n  loginTitle: {\n    fontSize: 22,\n    color: '#006bae',\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: 'bold',\n  },\n  label: { marginTop: 10, fontWeight: 'bold' },\n  input: {\n    borderWidth: 1, borderColor: '#ccc',\n    paddingHorizontal: 10, paddingVertical: 8,\n    borderRadius: 5, marginTop: 5,\n  },\n  buttonWrapper: { marginTop: 20 },\n  error: { color: 'red', marginTop: 10, textAlign: 'center' },\n  registerLink: {\n    marginTop: 20,\n    textAlign: 'center',\n    color: '#006bae',\n    textDecorationLine: 'underline',\n  },\n});","import React, { useState } from 'react';\nimport {\n  View,\n  Text,\n  TextInput,\n  Button,\n  Alert,\n  StyleSheet,\n  ScrollView,\n  Image,\n  TouchableOpacity,\n} from 'react-native';\nimport { Picker } from '@react-native-picker/picker';\n\nexport default function RegisterScreen({ navigation }) {\n  const [form, setForm] = useState({\n    firstName: '',\n    lastName: '',\n    email: '',\n    password: '',\n    role: '',\n  });\n\n  const handleChange = (field, value) => {\n    setForm({ ...form, [field]: value });\n  };\n\n \n    const handleSubmit = async () => {\n  const { firstName, lastName, email, password, role } = form;\n\n  if (!firstName || !lastName || !email || !password || !role) {\n    Alert.alert('Error', 'All fields are required');\n    return;\n  }\n\n  if (password.length < 6) {\n    Alert.alert('Error', 'Password must be at least 6 characters');\n    return;\n  }\n\n  try {\n    const response = await fetch('http://192.168.91.1:8085/register', {\n      method: 'POST',\n      headers: {\n        'Content-Type': 'application/x-www-form-urlencoded',\n      },\n      body: new URLSearchParams({\n        firstName,\n        lastName,\n        email,\n        password,\n        role,\n      }).toString(),\n    });\n\n    if (response.ok) {\n      Alert.alert('Success', 'Registration complete', [\n        {\n          text: 'Go to Login',\n          onPress: () =>\n            navigation.reset({\n              index: 0,\n              routes: [{ name: 'Login' }],\n            }),\n        },\n      ]);\n    } else {\n      const msg = await response.text();\n      Alert.alert('Error', msg || 'Registration failed');\n    }\n  } catch (error) {\n    console.error(error);\n    Alert.alert('Error', 'Network error');\n  }\n};\n\n\n  return (\n    <ScrollView style={styles.container}>\n      <View style={styles.header}>\n        <Image\n          source={{ uri: 'https://www.uefwebshop.fi/cdn/shop/files/UEF_eng_black.jpg?v=1693486399&width=330' }}\n          style={styles.logo}\n        />\n        <Text style={styles.title}>University of Eastern Finland - LMS</Text>\n      </View>\n\n      <View style={styles.form}>\n        <Text style={styles.heading}>Create an Account</Text>\n\n        <Text style={styles.label}>First Name</Text>\n        <TextInput\n          style={styles.input}\n          value={form.firstName}\n          onChangeText={(val) => handleChange('firstName', val)}\n        />\n\n        <Text style={styles.label}>Last Name</Text>\n        <TextInput\n          style={styles.input}\n          value={form.lastName}\n          onChangeText={(val) => handleChange('lastName', val)}\n        />\n\n        <Text style={styles.label}>Email</Text>\n        <TextInput\n          style={styles.input}\n          keyboardType=\"email-address\"\n          value={form.email}\n          onChangeText={(val) => handleChange('email', val)}\n        />\n\n        <Text style={styles.label}>Password</Text>\n        <TextInput\n          style={styles.input}\n          secureTextEntry\n          value={form.password}\n          onChangeText={(val) => handleChange('password', val)}\n        />\n\n        <Text style={styles.label}>Role</Text>\n        <Picker\n          selectedValue={form.role}\n          style={styles.input}\n          onValueChange={(val) => handleChange('role', val)}\n        >\n          <Picker.Item label=\"--Select Role--\" value=\"\" />\n          <Picker.Item label=\"Student\" value=\"STUDENT\" />\n          <Picker.Item label=\"Teacher\" value=\"TEACHER\" />\n          <Picker.Item label=\"Admin\" value=\"ADMIN\" />\n        </Picker>\n\n        <Button title=\"Register\" onPress={handleSubmit} color=\"#006bae\" />\n\n        <TouchableOpacity onPress={() => navigation.navigate('Login')}>\n          <Text style={styles.loginLink}>Already have an account? Login</Text>\n        </TouchableOpacity>\n      </View>\n    </ScrollView>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: { backgroundColor: '#f5f5f5' },\n  header: {\n    alignItems: 'center',\n    padding: 20,\n    backgroundColor: '#006bae',\n  },\n  logo: { height: 60, width: 120, marginBottom: 10 },\n  title: { color: '#fff', fontSize: 18, fontWeight: 'bold' },\n  form: {\n    backgroundColor: '#fff',\n    margin: 20,\n    padding: 20,\n    borderRadius: 10,\n    elevation: 2,\n  },\n  heading: {\n    fontSize: 20,\n    color: '#006bae',\n    textAlign: 'center',\n    marginBottom: 20,\n    fontWeight: 'bold',\n  },\n  label: { fontWeight: 'bold', marginTop: 10 },\n  input: {\n    borderWidth: 1,\n    borderColor: '#ccc',\n    borderRadius: 5,\n    paddingHorizontal: 10,\n    paddingVertical: 8,\n    marginTop: 5,\n  },\n  loginLink: {\n    marginTop: 20,\n    color: '#006bae',\n    textAlign: 'center',\n    textDecorationLine: 'underline',\n  },\n});","import React from 'react';\r\nimport { View, Dimensions, ScrollView } from 'react-native';\r\nimport { BarChart } from 'react-native-chart-kit';\r\n\r\nconst screenTimes = {\r\n  Dashboard: 120,\r\n  SurveyDashboard: 90,\r\n  CreateSurvey: 150,\r\n  ViewResponses: 60,\r\n  UsageChart: 30\r\n};\r\n\r\nconst UsageChartScreen = () => {\r\n  const labels = Object.keys(screenTimes);\r\n  const data = Object.values(screenTimes);\r\n\r\n  return (\r\n    <ScrollView>\r\n      <View>\r\n        <BarChart\r\n          data={{\r\n            labels: labels,\r\n            datasets: [{ data }]\r\n          }}\r\n          width={Dimensions.get('window').width - 16}\r\n          height={250}\r\n          fromZero\r\n          yAxisLabel=\"\"\r\n          chartConfig={{\r\n            backgroundGradientFrom: \"#ffffff\",\r\n            backgroundGradientTo: \"#ffffff\",\r\n            color: (opacity = 1) => `rgba(0, 107, 174, ${opacity})`,\r\n            labelColor: (opacity = 1) => `rgba(0, 0, 0, ${opacity})`,\r\n            barPercentage: 0.5\r\n          }}\r\n          style={{ marginVertical: 20, borderRadius: 8 }}\r\n        />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n};\r\n\r\nexport default UsageChartScreen;\r\n","// utils/screenLogUtils.js\r\nimport AsyncStorage from '@react-native-async-storage/async-storage';\r\n\r\nexport const getScreenLogsForUser = async (userId) => {\r\n  const key = `screenLogs_${userId}`;\r\n  const logs = await AsyncStorage.getItem(key);\r\n  return JSON.parse(logs || '[]');\r\n};\r\n\r\nexport const filterLogs = (logs, { screen = null, date = null }) => {\r\n  return logs.filter(log => {\r\n    const logDate = new Date(log.timestamp).toISOString().slice(0, 10);\r\n    const matchScreen = !screen || log.screen === screen;\r\n    const matchDate = !date || logDate === date;\r\n    return matchScreen && matchDate;\r\n  });\r\n};\r\n\r\nexport const aggregateScreenTime = (logs) => {\r\n  return logs.reduce((acc, log) => {\r\n    acc[log.screen] = (acc[log.screen] || 0) + log.duration;\r\n    return acc;\r\n  }, {});\r\n};\r\n\r\nexport const exportLogsAsJson = (logs) => {\r\n  return JSON.stringify(logs, null, 2);\r\n};\r\n\r\nexport const exportLogsAsCSV = (logs) => {\r\n  const header = 'Screen,Duration (s),Timestamp\\n';\r\n  const rows = logs.map(log => `${log.screen},${log.duration},${log.timestamp}`);\r\n  return header + rows.join('\\n');\r\n};","import React, { useEffect, useState } from 'react';\r\nimport { View, Text, ScrollView, StyleSheet, Button, Share, Alert } from 'react-native';\r\nimport {\r\n  aggregateScreenTime,\r\n  exportLogsAsCSV,\r\n  exportLogsAsJson\r\n} from '../utils/screenLogUtils';\r\n\r\nexport default function ScreenUsageDashboard({ route, navigation, onLogout }) {\r\n  const userId = route.params?.userId;\r\n  const [logs, setLogs] = useState([]);\r\n  const [totals, setTotals] = useState({});\r\n\r\n  useEffect(() => {\r\n    if (userId) {\r\n      fetch(`http://192.168.91.1:8085/api/screen-logs/${userId}`)\r\n        .then(res => res.json())\r\n        .then(data => {\r\n          if (!Array.isArray(data)) {\r\n            Alert.alert('Error', 'Backend returned invalid log format');\r\n            return;\r\n          }\r\n          setLogs(data);\r\n          setTotals(aggregateScreenTime(data));\r\n        })\r\n        .catch(err => {\r\n          console.error(err);\r\n          Alert.alert('Error', 'Failed to fetch logs from backend');\r\n        });\r\n    }\r\n  }, [userId]);\r\n\r\n  const shareCSV = async () => {\r\n    try {\r\n      const csvData = exportLogsAsCSV(logs);\r\n      await Share.share({ message: csvData });\r\n    } catch (err) {\r\n      Alert.alert('Error', 'Failed to share CSV data.');\r\n    }\r\n  };\r\n\r\n  const shareJSON = async () => {\r\n    try {\r\n      const jsonData = exportLogsAsJson(logs);\r\n      await Share.share({ message: jsonData });\r\n    } catch (err) {\r\n      Alert.alert('Error', 'Failed to share JSON data.');\r\n    }\r\n  };\r\n\r\n  const handleLogout = () => {\r\n    console.log(\"🚪 Logout button clicked\");\r\n    if (typeof onLogout === 'function') {\r\n      console.log(\"✅ onLogout function exists — calling onLogout()\");\r\n      onLogout(); // Let App.js handle user reset and navigation\r\n    } else {\r\n      console.warn(\"❌ onLogout was not passed into ScreenUsageDashboard.\");\r\n      Alert.alert(\"Error\", \"Logout handler not available.\");\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ScrollView style={styles.container}>\r\n      <Text style={styles.title}>📊 Screen Usage for User ID: {userId}</Text>\r\n\r\n      <Text style={styles.subTitle}>⏱️ Total Time Per Screen (mins)</Text>\r\n      {Object.entries(totals).map(([screen, totalSecs], idx) => (\r\n        <View key={idx} style={styles.totalItem}>\r\n          <Text>{screen}: {(totalSecs / 60).toFixed(2)} mins</Text>\r\n        </View>\r\n      ))}\r\n\r\n      <Text style={styles.subTitle}>📋 Detailed Logs</Text>\r\n      {logs.map((log, index) => (\r\n        <View key={index} style={styles.logItem}>\r\n          <Text>Screen: {log.screen}</Text>\r\n          <Text>Duration: {log.duration}s</Text>\r\n          <Text>Time: {new Date(log.timestamp).toLocaleString()}</Text>\r\n        </View>\r\n      ))}\r\n\r\n      <View style={styles.buttonRow}>\r\n        <Button title=\"📤 Export as CSV\" onPress={shareCSV} color=\"#007AFF\" />\r\n        <Button title=\"📤 Export as JSON\" onPress={shareJSON} color=\"#34C759\" />\r\n      </View>\r\n\r\n      <View style={styles.logoutWrapper}>\r\n        <Button title=\"🚪 Logout\" color=\"#006bae\" onPress={handleLogout} />\r\n      </View>\r\n    </ScrollView>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { padding: 16 },\r\n  title: { fontSize: 20, fontWeight: 'bold', marginBottom: 12 },\r\n  subTitle: { fontSize: 16, fontWeight: '600', marginTop: 16, marginBottom: 8 },\r\n  logItem: {\r\n    padding: 10,\r\n    marginBottom: 10,\r\n    backgroundColor: '#f1f1f1',\r\n    borderRadius: 6\r\n  },\r\n  totalItem: {\r\n    padding: 6,\r\n    borderBottomWidth: 1,\r\n    borderColor: '#ccc'\r\n  },\r\n  buttonRow: {\r\n    flexDirection: 'row',\r\n    justifyContent: 'space-around',\r\n    marginTop: 20\r\n  },\r\n  logoutWrapper: {\r\n    marginTop: 30,\r\n    borderTopWidth: 1,\r\n    borderColor: '#ccc',\r\n    paddingTop: 10\r\n  }\r\n});\r\n","// utils/ScreenTimeTracker.js\r\n\r\nlet latestLog = ''; // Add this at the top\r\n\r\nexport const logScreenTime = (screenName, userId) => {\r\n  const timestamp = new Date().toISOString();\r\n  latestLog = `📺 User ${userId} viewed screen: ${screenName} at ${timestamp}`;\r\n  console.log(latestLog);\r\n\r\n  fetch(`http://192.168.91.1:8085/api/screen-logs/${userId}`, {\r\n    method: 'POST',\r\n    headers: { 'Content-Type': 'application/json' },\r\n    body: JSON.stringify({ screenName, timestamp }),\r\n  }).catch((err) => {\r\n    console.error('❌ Failed to log screen usage', err);\r\n  });\r\n};\r\n\r\n// ✅ New helper to get latest log\r\nexport const getLatestScreenLog = () => latestLog;\r\n","// screens/LiveLogScreen.js\r\n\r\nimport React, { useEffect, useState } from 'react';\r\nimport { View, Text, StyleSheet } from 'react-native';\r\nimport { getLatestScreenLog } from '../utils/ScreenTimeTracker';\r\n\r\nexport default function LiveLogScreen() {\r\n  const [log, setLog] = useState(getLatestScreenLog());\r\n\r\n  useEffect(() => {\r\n    const interval = setInterval(() => {\r\n      setLog(getLatestScreenLog());\r\n    }, 1000); // update every second\r\n\r\n    return () => clearInterval(interval);\r\n  }, []);\r\n\r\n  return (\r\n    <View style={styles.container}>\r\n      <Text style={styles.title}>📊 Last Screen Log</Text>\r\n      <Text style={styles.logText}>{log || 'No screen activity yet.'}</Text>\r\n    </View>\r\n  );\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n  container: { flex: 1, justifyContent: 'center', alignItems: 'center', padding: 20 },\r\n  title: { fontSize: 20, marginBottom: 20, fontWeight: 'bold' },\r\n  logText: { fontSize: 16, color: '#333' },\r\n});\r\n","import React, { useState } from 'react';\nimport { NavigationContainer, CommonActions } from '@react-navigation/native';\nimport { createNativeStackNavigator } from '@react-navigation/native-stack';\nimport { createNavigationContainerRef } from '@react-navigation/native';\nimport { View } from 'react-native';\n\n// Screens\nimport SurveyScreen from './screens/SurveyScreen';\nimport CreateSurveyQuestionScreen from './screens/CreateSurveyQuestionScreen';\nimport ViewResponsesScreen from './screens/ViewResponsesScreen';\nimport SurveyDashboardScreen from './screens/SurveyDashboardScreen';\nimport DashboardScreen from './screens/DashboardScreen';\nimport LoginScreen from './screens/LoginScreen';\nimport RegisterScreen from './screens/RegisterScreen';\nimport UsageChartScreen from './screens/UsageChartScreen';\nimport ScreenUsageDashboard from './screens/ScreenUsageDashboard';\nimport LiveLogScreen from './screens/LiveLogScreen';\n\nimport { logScreenTime } from './utils/ScreenTimeTracker';\n\nconst Stack = createNativeStackNavigator();\nexport const navigationRef = createNavigationContainerRef();\n\nexport default function App() {\n  const [user, setUser] = useState(null);\n  const normalizedRole = user?.role?.toLowerCase();\n\n  const handleLogin = (userData) => {\n    setUser(userData);\n  };\n\n  const handleLogout = () => {\n    console.log(\"🔐 Logging out...\");\n    setUser(null);\n\n    if (navigationRef.isReady()) {\n      navigationRef.reset({\n        index: 0,\n        routes: [{ name: 'Login' }],\n      });\n    }\n  };\n\n  return (\n    <NavigationContainer\n      ref={navigationRef}\n      onStateChange={(state) => {\n        if (user?.id && state) {\n          const currentRoute = state.routes[state.index]?.name;\n          logScreenTime(currentRoute, user.id);\n        }\n      }}\n    >\n      <Stack.Navigator initialRouteName=\"Login\">\n        {!user ? (\n          <>\n            <Stack.Screen name=\"Login\" options={{ headerShown: false }}>\n              {(props) => <LoginScreen {...props} onLogin={handleLogin} />}\n            </Stack.Screen>\n            <Stack.Screen\n              name=\"Register\"\n              component={RegisterScreen}\n              options={{ title: 'Create Account' }}\n            />\n          </>\n        ) : normalizedRole === 'student' ? (\n          <>\n            <Stack.Screen\n              name=\"Survey\"\n              options={{ title: 'Take Survey' }}\n              initialParams={{ user }}\n            >\n              {(props) => <SurveyScreen {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n            <Stack.Screen\n              name=\"SurveyDashboard\"\n              options={{ title: 'My Responses' }}\n              initialParams={{ user }}\n            >\n              {(props) => <SurveyDashboardScreen {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n            <Stack.Screen\n              name=\"Dashboard\"\n              options={{ title: 'Student Dashboard' }}\n              initialParams={{ user }}\n            >\n              {(props) => <DashboardScreen {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n          </>\n        ) : (\n          <>\n            <Stack.Screen\n              name=\"CreateSurvey\"\n              options={{ title: 'Create Survey' }}\n              initialParams={{ user }}\n            >\n              {(props) => <CreateSurveyQuestionScreen {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n            <Stack.Screen\n              name=\"SurveyDashboard\"\n              options={{ title: 'Survey Dashboard' }}\n              initialParams={{ user }}\n            >\n              {(props) => <SurveyDashboardScreen {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n            <Stack.Screen\n              name=\"ViewResponses\"\n              options={{ title: 'View Responses' }}\n              initialParams={{ user }}\n            >\n              {(props) => <ViewResponsesScreen {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n            <Stack.Screen\n              name=\"Dashboard\"\n              options={{ title: 'Admin Dashboard' }}\n              initialParams={{ user }}\n            >\n              {(props) => <DashboardScreen {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n            <Stack.Screen\n              name=\"UsageChart\"\n              initialParams={{ user }}\n            >\n              {(props) => <UsageChartScreen {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n            <Stack.Screen\n              name=\"LiveLog\"\n              options={{ title: 'Live Screen Tracker' }}\n              initialParams={{ user }}\n            >\n              {(props) => <LiveLogScreen {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n            <Stack.Screen\n              name=\"ScreenUsageDashboard\"\n              options={{ title: 'Screen Usage Dashboard' }}\n              initialParams={{ user }}\n            >\n              {(props) => <ScreenUsageDashboard {...props} onLogout={handleLogout} />}\n            </Stack.Screen>\n          </>\n        )}\n      </Stack.Navigator>\n    </NavigationContainer>\n  );\n}","// The module cache\nvar __webpack_module_cache__ = {};\n\n// The require function\nfunction __webpack_require__(moduleId) {\n\t// Check if module is in cache\n\tvar cachedModule = __webpack_module_cache__[moduleId];\n\tif (cachedModule !== undefined) {\n\t\treturn cachedModule.exports;\n\t}\n\t// Create a new module (and put it into the cache)\n\tvar module = __webpack_module_cache__[moduleId] = {\n\t\tid: moduleId,\n\t\tloaded: false,\n\t\texports: {}\n\t};\n\n\t// Execute the module function\n\t__webpack_modules__[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n\t// Flag the module as loaded\n\tmodule.loaded = true;\n\n\t// Return the exports of the module\n\treturn module.exports;\n}\n\n// expose the modules object (__webpack_modules__)\n__webpack_require__.m = __webpack_modules__;\n\n","var deferred = [];\n__webpack_require__.O = (result, chunkIds, fn, priority) => {\n\tif(chunkIds) {\n\t\tpriority = priority || 0;\n\t\tfor(var i = deferred.length; i > 0 && deferred[i - 1][2] > priority; i--) deferred[i] = deferred[i - 1];\n\t\tdeferred[i] = [chunkIds, fn, priority];\n\t\treturn;\n\t}\n\tvar notFulfilled = Infinity;\n\tfor (var i = 0; i < deferred.length; i++) {\n\t\tvar [chunkIds, fn, priority] = deferred[i];\n\t\tvar fulfilled = true;\n\t\tfor (var j = 0; j < chunkIds.length; j++) {\n\t\t\tif ((priority & 1 === 0 || notFulfilled >= priority) && Object.keys(__webpack_require__.O).every((key) => (__webpack_require__.O[key](chunkIds[j])))) {\n\t\t\t\tchunkIds.splice(j--, 1);\n\t\t\t} else {\n\t\t\t\tfulfilled = false;\n\t\t\t\tif(priority < notFulfilled) notFulfilled = priority;\n\t\t\t}\n\t\t}\n\t\tif(fulfilled) {\n\t\t\tdeferred.splice(i--, 1)\n\t\t\tvar r = fn();\n\t\t\tif (r !== undefined) result = r;\n\t\t}\n\t}\n\treturn result;\n};","// getDefaultExport function for compatibility with non-harmony modules\n__webpack_require__.n = (module) => {\n\tvar getter = module && module.__esModule ?\n\t\t() => (module['default']) :\n\t\t() => (module);\n\t__webpack_require__.d(getter, { a: getter });\n\treturn getter;\n};","// define getter functions for harmony exports\n__webpack_require__.d = (exports, definition) => {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.g = (function() {\n\tif (typeof globalThis === 'object') return globalThis;\n\ttry {\n\t\treturn this || new Function('return this')();\n\t} catch (e) {\n\t\tif (typeof window === 'object') return window;\n\t}\n})();","__webpack_require__.o = (obj, prop) => (Object.prototype.hasOwnProperty.call(obj, prop))","// define __esModule on exports\n__webpack_require__.r = (exports) => {\n\tif(typeof Symbol !== 'undefined' && Symbol.toStringTag) {\n\t\tObject.defineProperty(exports, Symbol.toStringTag, { value: 'Module' });\n\t}\n\tObject.defineProperty(exports, '__esModule', { value: true });\n};","__webpack_require__.nmd = (module) => {\n\tmodule.paths = [];\n\tif (!module.children) module.children = [];\n\treturn module;\n};","// no baseURI\n\n// object to store loaded and loading chunks\n// undefined = chunk not loaded, null = chunk preloaded/prefetched\n// [resolve, reject, Promise] = chunk loading, 0 = chunk loaded\nvar installedChunks = {\n\t792: 0\n};\n\n// no chunk on demand loading\n\n// no prefetching\n\n// no preloaded\n\n// no HMR\n\n// no HMR manifest\n\n__webpack_require__.O.j = (chunkId) => (installedChunks[chunkId] === 0);\n\n// install a JSONP callback for chunk loading\nvar webpackJsonpCallback = (parentChunkLoadingFunction, data) => {\n\tvar [chunkIds, moreModules, runtime] = data;\n\t// add \"moreModules\" to the modules object,\n\t// then flag all \"chunkIds\" as loaded and fire callback\n\tvar moduleId, chunkId, i = 0;\n\tif(chunkIds.some((id) => (installedChunks[id] !== 0))) {\n\t\tfor(moduleId in moreModules) {\n\t\t\tif(__webpack_require__.o(moreModules, moduleId)) {\n\t\t\t\t__webpack_require__.m[moduleId] = moreModules[moduleId];\n\t\t\t}\n\t\t}\n\t\tif(runtime) var result = runtime(__webpack_require__);\n\t}\n\tif(parentChunkLoadingFunction) parentChunkLoadingFunction(data);\n\tfor(;i < chunkIds.length; i++) {\n\t\tchunkId = chunkIds[i];\n\t\tif(__webpack_require__.o(installedChunks, chunkId) && installedChunks[chunkId]) {\n\t\t\tinstalledChunks[chunkId][0]();\n\t\t}\n\t\tinstalledChunks[chunkId] = 0;\n\t}\n\treturn __webpack_require__.O(result);\n}\n\nvar chunkLoadingGlobal = self[\"webpackChunkweb\"] = self[\"webpackChunkweb\"] || [];\nchunkLoadingGlobal.forEach(webpackJsonpCallback.bind(null, 0));\nchunkLoadingGlobal.push = webpackJsonpCallback.bind(null, chunkLoadingGlobal.push.bind(chunkLoadingGlobal));","// startup\n// Load entry module and return exports\n// This entry module depends on other loaded chunks and execution need to be delayed\nvar __webpack_exports__ = __webpack_require__.O(undefined, [170], () => (__webpack_require__(5700)))\n__webpack_exports__ = __webpack_require__.O(__webpack_exports__);\n"],"names":["SurveyScreen","route","navigation","onLogout","user","params","userId","id","role","toLowerCase","questions","setQuestions","useState","responses","setResponses","error","setError","currentIndex","setCurrentIndex","useEffect","window","alert","fetch","then","res","json","data","Array","isArray","content","catch","handleChange","questionId","value","prev","Object","assign","showAlert","title","message","currentQuestion","_jsxs","View","style","flex","children","ScrollView","contentContainerStyle","styles","container","Text","length","subText","_jsx","questionBlock","label","questiontext","questiontype","TextInput","input","placeholder","onChangeText","val","Picker","selectedValue","onValueChange","Item","presentation","split","map","opt","options","Number","sort","a","b","min","max","step","currentValue","sliderBlock","sliderValue","Slider","minimumValue","maximumValue","toString","minimumTrackTintColor","maximumTrackTintColor","thumbTintColor","sliderLabels","paginationRow","halfButton","Button","onPress","i","Math","disabled","currentAnswer","trim","async","payload","q","answer","filter","item","method","headers","body","JSON","stringify","msg","text","ok","status","err","handleSubmit","buttonRow","handleViewResponses","navigate","color","logoutWrapper","dispatch","CommonActions","reset","index","routes","name","StyleSheet","create","padding","paddingBottom","backgroundColor","fontSize","textAlign","marginBottom","fontWeight","borderWidth","borderColor","borderRadius","paddingHorizontal","paddingVertical","marginTop","flexDirection","justifyContent","marginHorizontal","position","bottom","left","right","borderTopWidth","CreateSurveyQuestionScreen","setQuestionText","setQuestionType","setPresentation","buttonWrapper","encodeURIComponent","Alert","console","TouchableOpacity","flexGrow","alignItems","ViewResponsesScreen","students","setStudents","selectedUserId","setSelectedUserId","query","setQuery","filteredStudents","setFilteredStudents","loading","setLoading","fetchResponses","fetchStudents","menuItem","dropdown","s","username","includes","FlatList","keyExtractor","renderItem","handleSelectStudent","studentId","option","dropdownList","ActivityIndicator","size","_Fragment","info","r","responseItem","qid","timestamp","Date","toLocaleString","maxHeight","borderBottomColor","borderBottomWidth","fontStyle","borderLeftColor","borderLeftWidth","SurveyDashboardScreen","useNavigation","loggedInUserId","users","setUsers","filteredUsers","setFilteredUsers","sortConfig","setSortConfig","key","direction","Error","overrideUserId","handleSort","sorted","aVal","bVal","localeCompare","searchBox","filtered","u","match","find","random","subheading","tableHeader","cellHeader","sortableHeader","noResponse","resp","tableRow","cell","AsyncStorage","removeItem","borderTopLeftRadius","borderTopRightRadius","textDecorationLine","DashboardScreen","menu","gap","alignSelf","width","LoginScreen","onLogin","setUsername","password","setPassword","header","Image","source","uri","logo","loginBox","loginTitle","autoCapitalize","secureTextEntry","token","setItem","registerLink","height","margin","elevation","RegisterScreen","form","setForm","firstName","lastName","email","field","heading","keyboardType","response","URLSearchParams","loginLink","screenTimes","Dashboard","SurveyDashboard","CreateSurvey","ViewResponses","UsageChart","UsageChartScreen","labels","keys","values","BarChart","datasets","Dimensions","get","fromZero","yAxisLabel","chartConfig","backgroundGradientFrom","backgroundGradientTo","opacity","labelColor","barPercentage","marginVertical","aggregateScreenTime","logs","reduce","acc","log","screen","duration","exportLogsAsJson","exportLogsAsCSV","join","ScreenUsageDashboard","setLogs","totals","setTotals","subTitle","entries","totalSecs","idx","totalItem","toFixed","logItem","csvData","Share","share","jsonData","handleLogout","warn","paddingTop","latestLog","logScreenTime","screenName","toISOString","getLatestScreenLog","LiveLogScreen","setLog","interval","setInterval","clearInterval","logText","Stack","createNativeStackNavigator","navigationRef","createNavigationContainerRef","App","setUser","normalizedRole","handleLogin","userData","isReady","NavigationContainer","ref","onStateChange","state","currentRoute","Navigator","initialRouteName","Screen","initialParams","props","headerShown","component","__webpack_module_cache__","__webpack_require__","moduleId","cachedModule","undefined","exports","module","loaded","__webpack_modules__","call","m","deferred","O","result","chunkIds","fn","priority","notFulfilled","Infinity","fulfilled","j","every","splice","n","getter","__esModule","d","definition","o","defineProperty","enumerable","g","globalThis","this","Function","e","obj","prop","prototype","hasOwnProperty","Symbol","toStringTag","nmd","paths","installedChunks","chunkId","webpackJsonpCallback","parentChunkLoadingFunction","moreModules","runtime","some","chunkLoadingGlobal","self","forEach","bind","push","__webpack_exports__"],"sourceRoot":""}